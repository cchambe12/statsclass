library("bibtex", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("knitcitations", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
setwd("~/Documents/git/statsclass")
d<-read.csv("tour.csv", header=TRUE)
View(d)
ggplot(d, aes(x=stage, y=temp, color=year)) + geom_point()
ggplot(d, aes(x=stage, y=temp, color=year)) + geom_point()
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
ggplot(d, aes(x=stage, y=temp, color=year)) + geom_point()
d$mean.temp<-d[mean(temp,year),]
d$mean.temp<-d[mean(d$temp,d$year),]
d$mean.temp<-d[avg(temp,year),]
d$mean.temp<-mean(d$temp[year==1904])
d$mean.temp<-mean(d$temp[d$year==1904])
d$mean.2017<-mean(d$temp[d$year==2017])
days<-d[which(d$temp>30)]
days<-d[which(d$temp>30),]
d$se<-d[se(temp,year),]
?se
mod<-lm(stage~temp+year, data=d)
n1 = (2.8*0.01)^2
n100 = (2.8*1)^2
n10000 = (2.8*100)^2
nl1 = (2.8*log(1))^2
nl100 = (2.8*log(100))^2
nl10000 = (2.8*log(10000))^2
n1
n100
n10000
nl1
nl100
nl10000
n1 = ((2.8*0.5)/(0.01))^2
n1
n100 = ((2.8*0.5)/(1))^2
n100
n10000 = ((2.8*0.5)/(100))^2
n10000
n1 = ((2.8*0.05)/(0.01))^2
n1
n100 = ((2.8*0.05)/(1))^2
n100
n10000 = ((2.8*0.05)/(100))^2
n10000
nl1 = ((2.8*0.5)/(log(0.01)))^2
nl100 = ((2.8*0.5)/(log(1)))^2
nl10000 = ((2.8*0.5)/(log(100)))^2
nl1
nl100
nl10000
d<-read.dta("sesame.dta", header=TRUE)
setwd("~/Documents/git/statsclass/ARM_Data")
d<-read.dta("sesame/sesame.dta", header=TRUE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load Libraries
library(foreign)
library(dplyr)
library(tidyr)
library(ggplot2)
library(arm)
# Set working directory and load data
setwd("~/Documents/git/statsclass/ARM_Data")
d<-read.dta("sesame/sesame.dta", header=TRUE)
d<-read.dta("sesame/sesame.dta")
d
d<-dplyr::select(d, id, site, sex, age, encour, prelet, postlet)
unique(d$id)
unique(d$site)
unique(d$sex)
unique(d$age)
sort(unique(d$age))
sort(unique(d$prelet))
sort(unique(d$postlet))
hist(d$prelet)
hist(d$postlet)
available_data<-as.data.frame(lapply(d, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = TRUE) ]))
View(available_data)
available_data<-as.data.frame(lapply(d$age, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = TRUE) ]))
View(available_data)
d<-dplyr::select(d, id, site, sex, age, encour, prelet, postlet)
available_data<- apply (d, 1, function(x) {x[sample( c(5), site(n/2))] <- NA; x} )
available_data<- apply (d, 1, function(x) {x[sample( c(5), floor(n/2))] <- NA; x} )
available_data<- apply (d, 1, function(x) {x[sample( c(5), floor(n/10))] <- NA; x} )
df<-d$age
x<-as.data.frame(lapply(df, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = TRUE) ]))
View(x)
df<-as.dataframe(d$age)
df<-as.data.frame(d$age)
x<-as.data.frame(lapply(df, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = TRUE) ]))
View(x)
available_data<-full_join(x, d)
available_data<-cbind(x, d)
available_data<-dplyr::select(available_data, -age)
View(available_data)
available_data<-cbind(x, d)
avail<-available_data[!is.na(available_data$d.age),]
lm(postlet~age, data=avail)
mod<-lm(postlet~age, data=avail)
display(mod)
d<-dplyr::select(d, id, site, sex, age, encour, prelet, postlet)
df<-as.data.frame(d$prelet)
x<-as.data.frame(lapply(df, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = TRUE) ]))
available_data<-cbind(x, d)
View(available_data)
mod<-lm(postlet~prelet, data=available_data)
mod<-lm(postlet~d.prelet, data=avail)
display(mod)
avail<-available_data[!is.na(available_data$d.prelet),]
mod<-lm(postlet~d.prelet, data=avail)
display(mod)
mod1<-lm(postlet~prelet, data=available_data)
display(mod1)
mod<-lm(d.prelet~postlet, data=avail)
display(mod)
mod1<-lm(prelet~postlet, data=available_data)
display(mod1)
d<-read.dta("sesame/sesame.dta")
d<-dplyr::select(d, id, site, sex, age, encour, prelet, postlet)
df<-as.data.frame(d$prelet)
x<-as.data.frame(lapply(df, function(cc) cc[ sample(c(TRUE, NA), prob = c(0.5, 0.5), size = length(cc), replace = FALSE) ]))
NAins <-  NAinsert <- function(df, prop = .5){
row <- nrow(d)
col <- ncol(d)
make_na <- ceiling(prop*row*col)
id <- sample(0:(col*row-1), make_na, replace = FALSE)
rows <- id %/% col + 1
cols <- id %% col + 1
sapply(seq(make_na), function(x){
d[rows[x], cols[x]] <<- NA
}
)
return(d)
}
available <-  NAinsert <- function(df, prop = .5){
row <- nrow(d)
col <- ncol(d)
make_na <- ceiling(prop*row*col)
id <- sample(0:(col*row-1), make_na, replace = FALSE)
rows <- id %/% col + 1
cols <- id %% col + 1
sapply(seq(make_na), function(x){
d[rows[x], cols[x]] <<- NA
}
)
return(d)
}
available(d, 0.5)
available(x, 0.5)
dx<-as.data.frame(d$prelet)
available(dx, 0.5)
d<-read.dta("sesame/sesame.dta")
d<-dplyr::select(d, id, site, sex, age, encour, prelet, postlet)
dx<-as.data.frame(d$prelet)
missing <-  NAinsert <- function(df, prop = .5){
row <- nrow(d)
col <- ncol(d)
make_na <- ceiling(prop*row*col)
id <- sample(0:(col*row-1), make_na, replace = FALSE)
rows <- id %/% col + 1
cols <- id %% col + 1
sapply(seq(make_na), function(x){
d[rows[x], cols[x]] <<- NA
}
)
return(d)
}
available_data<-missing(dx, 0.5)
View(available_data)
View(dx)
missing <-  NAinsert <- function(dx, prop = .5){
row <- nrow(dx)
col <- ncol(dx)
make_na <- ceiling(prop*row*col)
id <- sample(0:(col*row-1), make_na, replace = FALSE)
rows <- id %/% col + 1
cols <- id %% col + 1
sapply(seq(make_na), function(x){
dx[rows[x], cols[x]] <<- NA
}
)
return(dx)
}
available_data<-missing(dx, 0.5)
View(available_data)
View(available_data)
library(reshape2)
dxx <- dcast(d, postlet ~ age)
dxx <- dcast(d, postlet ~ age)
df3 <- melt(dxx, value.name = "prelet", variable.name = "age")
df3<-df3[order(df3$postlet), ]
View(df3)
